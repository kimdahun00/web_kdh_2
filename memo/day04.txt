day04
시맨틱 태그 -> 드롭다운 네비바 -> 자바스크립트

1. 시맨틱 태그
   <header>    페이지의 머리글, 제목, 로고, 탐색 메뉴
   <nav>      탐색 링크(네비게이션 바)
   <main>      문서의 핵심 컨텐츠를 담는 영역, 페이지당 한 번만 사용
   <article>   독립적이고 자체 포함된 컨텐츠
   <section>   문서의 일반적인 구역을 정의
   <aside>      페이지의 주 내용과 관련이 적은 보조 컨텐츠
   <footer>   페이지의 바닥글, 회사정보, 저작권, 연락처 등

2. 자바스크립트(Javascript)
1) 자바스크립트
   웹 브라우저에서 동작하는 언어이다
   인터프리터 언어, 스크립트 언어
   브라우저에서 제공하는 엔진에 의해 실행된다

2) Node.js
   javascript가 웹 브라우저 없이도 작동할 수 있는 환경을 제공한다
   크롬의 v8 엔진을 기반으로 작동한다
   Node.js가 나오면서 자바스크립트는 독립적인 언어로 사용이 가능해졌다
   웹 브라우저와 상관없는 여러 어플리케이션을 만들 수 있고 서버도 만들 수 있게 되어
   한 가지 프로그래밍 언어로 웹 사이트 전체를 만들 수 있게 되었다

3) Node.js 설치
- 설치 확인
   cmd > node -v > 버전나오면 설치 완료

- 설치하기
   구글 > node.js 검색 > 다운로드 페이지 > OS에 맞게 설치

- vs code 확장 프로그램
   code runner 설치 후 test.js 파일 만든 뒤
   console.log("hello");
   console.log("안녕");
   실행 단축키 : ctrl + alt + n
   아래 콘솔 결과 나오는 것 확인 가능
   한글이 깨지거나 안보이면 vs code 열려있는 창 모두 닫고 vs code 재시작
   그래도 안되면 컴퓨터 재부팅 후 확인

3. 자바스크립트를 작성할 수 있는 위치
1) html 태그의 이벤트 리스너 속성에 작성
   html 태그 내에 이벤트가 발생할 때 처리하는 코드를 등록하는 리스너 속성이 있다
   이 속성에 자바스크립트 코드를 작성할 수 있다

2) <script></script> 내에 작성
   <head></head>, <body></body>, body 태그 밖에 등 어디서든 작성할 수 있다
   웹 페이지 내에서 여러번 작성도 가능하다

3) 자바스크립트 파일에 작성
   .js 확장자를 가진 별도의 파일로 작성 후 저장하고
   html 내에서는 <script src="파일경로"></script>를 통해 불러서 사용할 수 있다

4) url 부분에 작성
   <a>태그의 href 속성 등에서 자바스크립트 코드를 작성할 수 있다
   href 속성에서 자바스크립트 코드를 쓸 때는 javascript 라는 키워드를 작성해야한다

4. 자바스크립트 문법
1) 변수(Variable)
   데이터(값)를 저장하는 저장공간

   let   : 내용물을 바꿀 수 있는 상자
   const    : 한 번 넣으면 내용물을 바꿀 수 없는 상자, 중요한 값이라 절대 변하면 안될 때 사용

+) 자바와 자바스크립트 차이
자바      자료형 변수명 = 값;
      final 자료형 상수명 = 값; 
자바스크립트    let 변수명 = 값;
      const 상수명 = 값;

2) 자료형(Data Type)
- 원시타입
   문자열(string) : 글자나 문장을 항상 '', "", ``(백틱) 로 묶어준다
      자바 : String (""로 묶어줌)
         char (''로 묶어줌)
      오라클 : varchar2, char (''로 묶어줌)
      MySQL : char, varchar, text계열(문자열리터럴은 ''로 묶어줌)

   숫자(number) : 따옴표 없이 사용 가능하며 숫자타입(정수, 실수 구분없이)
      Infinity(무한), NaN(Not a Number 숫자가 아니어서 연산 불가) 특별한 값도 포함된다

      자바 : byte, short, int, long, double, float
      오라클 : number
      MySQL : INT, FLOAT, BIGINT, DOUBLE, BIT, TINYINT, SMALLINT, MEDIUMINT, DECIMAL(p,s)

   논리타입(boolean) : 참, 거짓 값을 나타내는 논리형 타입
      true, false

      자바 : boolean(true, false)
      오라클 : x(보통 number(1)로)
      MySQL : BOOLEAN은 TINYINT(1)의 별칭 (TRUE=1, FALSE=0 저장)

   undefined :  타입이 정해지지 않은 것을 의미
      undefined 값만 존재한다
   null : 값이 정해지지 않은 값을 의미, 의도적으로 값이 없음을 의미하는 값이다
      null 값만 존재한다
      
      자바 : NULL
      오라클 : NULL
      MySQL : NULL

   Symbol : 고유하고 변경 불가능한 값을 생성하는 타입, 주로 객체의 속성키로 사용된다

- 객체타입
   자바스크립트는 여러 언어의 영향을 받았다
   명령형, 함수형, 객체지향형을 지원하는 멀티 패러다임 프로그래밍 언어이다
   자바스크립트를 구성하는 거의 모든 것이 객체이다
   
   object : 객체 타입 키-값 쌍으로 이루어진 구조
   array : 순서가 있는 값들의 목록
   function : 코드 블록을 정의하고 호출할 수 있는 객체

3) 형변환
   타입 확인하는 연산자 : typeof x
   타입 확인하는 함수 : typeof(x)

   함수와 연산자에 전달되는 값은 자동 형변환
   수학 관련 연산자가 전달받은 값은 숫자 타입으로 자동 형변환
   alert() 전달받은 값은 해당 값의 자료형과 상관없이 문자열로 자동 형변환

- 문자형 변환
   alert(value) //value는 문자형이어야한다
   //value가 문자형이 아닌 숫자타입이나 논리타입등 다른 자료형의 값을 전달받으면 자동으로 문자형으로 변환된다
   String(value) //String() 함수를 호출해 전달받은 값을 문자열로 변환 가능
- 숫자형 변환
   alert("6"/"3") //결과는 2 문자열이 숫자형으로 자동 변환된 후 연산이 수행된다
   Number(value) //Number() 함수를 호출해 전달받은 값을 숫자형으로 명시하여 변환가능
- 불린형 변환
   Boolean(value)
      //숫자 0, 빈 문자열 "", null, undefined, NaN => 비어있는 값(Falsy) 결과는 false
      //비어있는 값을 제외한 모든 값(Truty) => 결과는 true